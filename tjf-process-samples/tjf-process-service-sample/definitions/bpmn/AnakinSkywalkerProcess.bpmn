<?xml version="1.0" encoding="UTF-8"?>
<definitions xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:flowable="http://flowable.org/bpmn" xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" xmlns:omgdc="http://www.omg.org/spec/DD/20100524/DC" xmlns:omgdi="http://www.omg.org/spec/DD/20100524/DI" typeLanguage="http://www.w3.org/2001/XMLSchema" expressionLanguage="http://www.w3.org/1999/XPath" targetNamespace="http://www.activiti.org/test">
  <message id="QuiGonFoundAnakinEvent" name="QuiGonFoundAnakinEvent"></message>
  <process id="AnakinSkyWalkerProcess" isExecutable="true">
    <startEvent id="startEvent" isInterrupting="true">
      <messageEventDefinition messageRef="QuiGonFoundAnakinEvent"></messageEventDefinition>
    </startEvent>
    <sequenceFlow sourceRef="startEvent" targetRef="transaction"></sequenceFlow>
    <transaction id="transaction" name="subProcess">
      <startEvent id="startEventTransaction"></startEvent>
      <sequenceFlow sourceRef="startEventTransaction" targetRef="MarryWithPadmeCommand"></sequenceFlow>
      <userTask id="MarryWithPadmeCommand" flowable:candidateGroups="ANAKIN">
        <extensionElements>
          <flowable:taskListener event="create" delegateExpression="${processWorker}"></flowable:taskListener>
        </extensionElements>
      </userTask>
      <sequenceFlow sourceRef="MarryWithPadmeCommand" targetRef="decideSide"></sequenceFlow>
      <serviceTask id="decideSide" flowable:type="dmn">
        <extensionElements>
          <flowable:field name="decisionTableReferenceKey">
            <flowable:string><![CDATA[ForceSideDecision]]></flowable:string>
          </flowable:field>
        </extensionElements>
      </serviceTask>
      <sequenceFlow sourceRef="decideSide" targetRef="whichSide"></sequenceFlow>
      <exclusiveGateway id="whichSide"></exclusiveGateway>
      <sequenceFlow sourceRef="whichSide" targetRef="wrongEnd">
        <conditionExpression xsi:type="tFormalExpression"><![CDATA[${side == 'light'}]]></conditionExpression>
      </sequenceFlow>
      <sequenceFlow sourceRef="whichSide" targetRef="BecomeDarthVaderCommand">
        <conditionExpression xsi:type="tFormalExpression"><![CDATA[${side == 'dark'}]]></conditionExpression>
      </sequenceFlow>
      <receiveTask id="BecomeDarthVaderCommand">
        <extensionElements>
          <flowable:executionListener event="start" delegateExpression="${processWorker}"></flowable:executionListener>
        </extensionElements>
      </receiveTask>
      <sequenceFlow sourceRef="BecomeDarthVaderCommand" targetRef="oldTrilogy"></sequenceFlow>
      <serviceTask id="oldTrilogy" flowable:type="case" flowable:caseDefinitionKey="OldTrilogyCase"></serviceTask>
      <sequenceFlow sourceRef="oldTrilogy" targetRef="EndProcessEvent"></sequenceFlow>
      <endEvent id="EndProcessEvent">
        <extensionElements>
          <flowable:executionListener event="start" delegateExpression="${processWorker}"></flowable:executionListener>
        </extensionElements>
      </endEvent>
      <endEvent id="wrongEnd">
        <cancelEventDefinition></cancelEventDefinition>
      </endEvent>
    </transaction>
    <boundaryEvent id="_DefaultCancelBoundaryEvent_" attachedToRef="transaction" cancelActivity="true">
      <cancelEventDefinition></cancelEventDefinition>
    </boundaryEvent>
  </process>
  <bpmndi:BPMNDiagram id="BPMNDiagram_AnakinSkyWalkerProcess">
    <bpmndi:BPMNPlane bpmnElement="AnakinSkyWalkerProcess" id="BPMNPlane_AnakinSkyWalkerProcess"></bpmndi:BPMNPlane>
  </bpmndi:BPMNDiagram>
</definitions>